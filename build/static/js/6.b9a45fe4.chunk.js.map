{"version":3,"sources":["components/UI/LoadingButtonComp.js","components/UI/Wrappers/BasePage.js","components/UI/TableComp.js","utils.js/searchDB.js","routes/Admin/SearchUser.js"],"names":["LoadingButtonComp","props","type","loading","fullWidth","variant","sx","mt","mb","bgcolor","color","children","BasePage","Icon","title","subtitle","maxWidth","component","marginTop","display","flexDirection","alignItems","width","height","align","searchUserTitles","SearchUserTitleComp","map","fontWeight","SearchUserData","dataInfo","data","firstName","lastName","role","accessLevel","email","id","dateOfBirth","toDate","toLocaleString","dateStyle","createdOn","timeStyle","searchGuestTitles","SearchGuestTitleComp","SearchGuestData","index","entrance","dateOfEntry","destination","TableComp","console","log","minWidth","size","compoundSearchDB","parameter","collectionID","collectionRef","collection","db","queries","queryParam","getDocs","query","where","toUpperCase","orderBy","Promise","all","queryResult","queryResultArray","docs","isFirstNameArray","isLastNameArray","isIDArray","queryResultsArray","concat","message","baseData","FaceIcon","SearchUser","useState","isLoading","setIsloading","results","setResults","open","severity","snackBar","setSnackBar","useForm","handleSubmit","control","reset","snackBarCloseHandler","event","reason","searchUserHandler","preventDefault","resultsArray","undefined","length","forEach","doc","push","onSubmit","container","spacing","rowSpacing","item","xs","sm","name","required","autoHideDuration","onClose"],"mappings":"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","file":"static/js/6.b9a45fe4.chunk.js","sourcesContent":["\r\nimport LoadingButton from \"@mui/lab/LoadingButton\";\r\n\r\nfunction LoadingButtonComp(props) {\r\n  return (\r\n    <LoadingButton\r\n    type=\"submit\"\r\n    loading={props.loading}\r\n    fullWidth\r\n    variant={props.variant}\r\n    sx={{\r\n      mt: 3,\r\n      mb: 2,\r\n      bgcolor: `${props.color}.light`,\r\n      \"&:hover\" : {bgcolor: `${props.color}.dark`},\r\n    }}\r\n  >\r\n    {props.children}\r\n  </LoadingButton>\r\n  )\r\n}\r\n\r\nexport default LoadingButtonComp","import React from \"react\";\r\nimport CssBaseline from \"@mui/material/CssBaseline\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Container from \"@mui/material/Container\";\r\n\r\nconst BasePage = (props) => {\r\n  const { Icon, color, title, subtitle, maxWidth } = props;\r\n\r\n  return (\r\n    <Container component=\"div\" maxWidth={maxWidth}>\r\n      <CssBaseline />\r\n      <Box\r\n        sx={{\r\n          marginTop: 4,\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <Icon sx={{ color: `${color}.light`, width: 100, height: 100 }} />\r\n        <Typography component=\"h2\" variant=\"h5\">\r\n          {title}\r\n        </Typography>\r\n        {subtitle && (\r\n          <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n            {subtitle}\r\n          </Typography>\r\n        )}\r\n        {props.children}\r\n      </Box>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default BasePage;\r\n","import * as React from \"react\";\r\nimport Table from \"@mui/material/Table\";\r\nimport TableBody from \"@mui/material/TableBody\";\r\nimport TableCell from \"@mui/material/TableCell\";\r\nimport TableContainer from \"@mui/material/TableContainer\";\r\nimport TableHead from \"@mui/material/TableHead\";\r\nimport TableRow from \"@mui/material/TableRow\";\r\nimport Paper from \"@mui/material/Paper\";\r\n// import { formatDistanceToNowStrict } from \"date-fns\";\r\n\r\n// Separate the components and organize it in a folder\r\nconst searchUserTitles = [\r\n  \"Name\",\r\n  \"Role\",\r\n  \"Access Level\",\r\n  \"Email\",\r\n  \"ID\",\r\n  \"Date of birth\",\r\n  \"Created on\",\r\n];\r\nconst SearchUserTitleComp = () => {\r\n  return searchUserTitles.map((title) => (\r\n    <TableCell sx={{ fontWeight: \"bold\" }} align=\"center\" key={title}>\r\n      {title}\r\n    </TableCell>\r\n  ));\r\n};\r\n\r\nconst SearchUserData = ({ dataInfo }) => {\r\n  return dataInfo.map((data) => (\r\n    <TableRow key={data.id}>\r\n      <TableCell align=\"center\">\r\n        {data.firstName + \" \" + data.lastName}\r\n      </TableCell>\r\n      <TableCell align=\"center\">{data.role}</TableCell>\r\n      <TableCell align=\"center\">{data.accessLevel}</TableCell>\r\n      <TableCell align=\"center\">{data.email}</TableCell>\r\n      <TableCell align=\"center\">{data.id}</TableCell>\r\n      <TableCell align=\"center\">\r\n        {data.dateOfBirth\r\n          .toDate()\r\n          .toLocaleString(\"en-US\", { dateStyle: \"long\" })}\r\n      </TableCell>\r\n      <TableCell align=\"center\">\r\n        {data.createdOn\r\n          .toDate()\r\n          .toLocaleString(\"en-US\", { dateStyle: \"long\", timeStyle: \"short\" })}\r\n      </TableCell>\r\n    </TableRow>\r\n  ));\r\n};\r\n\r\nconst searchGuestTitles = [\r\n  \"Name\",\r\n  \"ID\",\r\n  \"Role\",\r\n  \"Entrance #\",\r\n  \"Date of entry\",\r\n  \"Destination\",\r\n];\r\n\r\nconst SearchGuestTitleComp = () => {\r\n  return searchGuestTitles.map((title) => (\r\n    <TableCell sx={{ fontWeight: \"bold\" }} align=\"center\" key={title}>\r\n      {title}\r\n    </TableCell>\r\n  ));\r\n};\r\n\r\nconst SearchGuestData = ({ dataInfo }) => {\r\n  return dataInfo.map((data, index) => (\r\n    <TableRow key={index}>\r\n      <TableCell align=\"center\">\r\n        {data.firstName + \" \" + data.lastName}\r\n      </TableCell>\r\n      <TableCell align=\"center\">{data.id}</TableCell>\r\n      <TableCell align=\"center\">{data.role}</TableCell>\r\n      <TableCell align=\"center\">{data.entrance}</TableCell>\r\n      <TableCell align=\"center\">\r\n        {data.dateOfEntry\r\n          .toDate()\r\n          .toLocaleString(\"en-US\", { dateStyle: \"long\", timeStyle: \"short\" })}\r\n        {/* {formatDistanceToNowStrict(data.dateOfEntry.toDate(), { addSuffix: true })} */}\r\n      </TableCell>\r\n      <TableCell align=\"center\">{data.destination}</TableCell>\r\n    </TableRow>\r\n  ));\r\n};\r\n\r\nexport default function TableComp(props) {\r\n  const { type, dataInfo } = props;\r\n  console.log(dataInfo);\r\n  return (\r\n    <TableContainer sx={{ mt: 2 }}>\r\n      <Table sx={{ minWidth: 650 }} size=\"small\" aria-label=\"Search table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            {type === \"SearchUser\" && <SearchUserTitleComp />}\r\n            {type === \"SearchGuest\" && <SearchGuestTitleComp />}\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {type === \"SearchUser\" && <SearchUserData dataInfo={dataInfo} />}\r\n          {type === \"SearchGuest\" && <SearchGuestData dataInfo={dataInfo} />}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n","import { useCallback } from \"react\";\r\nimport { db } from \"./../firebase\";\r\nimport {\r\n  collection,\r\n  getDocs,\r\n  where,\r\n  query,\r\n  orderBy,\r\n  limit,\r\n  onSnapshot,\r\n} from \"firebase/firestore\";\r\n\r\nexport const compoundSearchDB = async (parameter, collectionID) => {\r\n  try {\r\n    const collectionRef = collection(db, collectionID);\r\n\r\n    const queryArray = [\"firstName\", \"lastName\", \"id\"];\r\n\r\n    const queries = queryArray.map((queryParam) => {\r\n      if (collectionID === \"guests\") {\r\n        return getDocs(\r\n          query(\r\n            collectionRef,\r\n            where(queryParam, \"==\", parameter.toUpperCase()),\r\n            orderBy(\"dateOfEntry\", \"desc\")\r\n          )\r\n        );\r\n      }\r\n      return getDocs(\r\n        query(collectionRef, where(queryParam, \"==\", parameter.toUpperCase()))\r\n      );\r\n    });\r\n\r\n    const queryResult = await Promise.all(queries);\r\n    const queryResultArray = queryResult.map((query) => {\r\n      return query.docs;\r\n    });\r\n\r\n    const [isFirstNameArray, isLastNameArray, isIDArray] = queryResultArray;\r\n\r\n    const queryResultsArray = isFirstNameArray.concat(\r\n      isLastNameArray,\r\n      isIDArray\r\n    );\r\n\r\n    return queryResultsArray;\r\n  } catch (error) {\r\n    console.log(error.message);\r\n  }\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\n\r\n\r\nimport Box from \"@mui/material/Box\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport FaceIcon from '@mui/icons-material/Face';\r\nimport Snackbar from \"@mui/material/Snackbar\";\r\n\r\nimport AlertComponent from \"../../components/UI/AlertComponent\";\r\nimport TableComp from \"../../components/UI/TableComp\";\r\nimport LoadingButtonComp from \"../../components/UI/LoadingButtonComp\";\r\nimport {compoundSearchDB} from \"../../utils.js/searchDB\";\r\nimport InputText from \"../../components/UI/InputText\";\r\nimport BasePage from \"../../components/UI/Wrappers/BasePage\";\r\n\r\n\r\n\r\nconst baseData = {\r\n  color: \"primary\",\r\n  Icon: FaceIcon,\r\n  title: \"Search User\",\r\n  subtitle: \"Search user by ID, name or last name\",\r\n};\r\n\r\n\r\nfunction SearchUser() {\r\n  const [isLoading, setIsloading] = useState(false);\r\n  const [results, setResults] = useState();\r\n  const [snackBar, setSnackBar] = useState({\r\n    open: false,\r\n    message: \"\",\r\n    severity: \"\",\r\n  });\r\n  const { handleSubmit, control, reset } = useForm();\r\n\r\n  const resetForm = () => {\r\n    reset();\r\n    setIsloading(false);\r\n  };\r\n\r\n  const snackBarCloseHandler = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    setSnackBar({ open: false });\r\n  };\r\n\r\n  const searchUserHandler = async (data, event) => {\r\n    try {\r\n      event.preventDefault();\r\n      setIsloading(true);\r\n\r\n      const queryResultsArray = await compoundSearchDB(data.parameter, \"users\");\r\n\r\n      const resultsArray = [];\r\n      if (queryResultsArray === undefined || queryResultsArray.length === 0) {\r\n        setIsloading(false);\r\n        setResults();\r\n        setSnackBar({\r\n          open: true,\r\n          message: \"No user found.\",\r\n          severity: \"error\",\r\n        });\r\n      } else {\r\n        queryResultsArray.forEach((doc) => {\r\n          resultsArray.push(doc.data());\r\n          resetForm();\r\n        });\r\n        setResults(resultsArray);\r\n      }\r\n    } catch (error) {\r\n      console.log(error.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <BasePage\r\n    color={baseData.color}\r\n    Icon={baseData.Icon}\r\n    title={baseData.title}\r\n    subtitle={baseData.subtitle}\r\n  >\r\n    <Box\r\n      component=\"form\"\r\n      onSubmit={handleSubmit(searchUserHandler)}\r\n      sx={{ mt: 3 }}\r\n    >\r\n      <Grid container spacing={1} rowSpacing={0.1}>\r\n        <Grid item xs={12} sm={12}>\r\n          <InputText control={control} name=\"Parameter\" fullWidth required />\r\n        </Grid>\r\n      </Grid>\r\n      <LoadingButtonComp\r\n        loading={isLoading}\r\n        variant=\"contained\"\r\n        color={baseData.color}\r\n      >\r\n        Search\r\n      </LoadingButtonComp>\r\n    </Box>\r\n    {results && <TableComp type=\"SearchUser\" dataInfo={results} />}\r\n    <Snackbar\r\n      open={snackBar.open}\r\n      autoHideDuration={2000}\r\n      onClose={snackBarCloseHandler}\r\n    >\r\n      <AlertComponent\r\n        onClose={snackBarCloseHandler}\r\n        severity={snackBar.severity}\r\n        sx={{ width: \"100%\" }}\r\n      >\r\n        {snackBar.message}\r\n      </AlertComponent>\r\n    </Snackbar>\r\n  </BasePage>\r\n  );\r\n}\r\n\r\nexport default SearchUser;\r\n"],"sourceRoot":""}